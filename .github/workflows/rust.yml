name: Rust

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*"
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Build & Test (linux)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose

  dist:
    name: Cross-compile & Package
    needs: test
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: linux
            arch: x86_64
          - target: aarch64-unknown-linux-gnu
            os: linux
            arch: aarch64
          - target: x86_64-apple-darwin
            os: darwin
            arch: x86_64
          - target: aarch64-apple-darwin
            os: darwin
            arch: aarch64
    steps:
      - uses: actions/checkout@v4

      # Install cross (Docker-based cross-compilation)
      - name: Install cross
        uses: taiki-e/install-action@v2
        with:
          tool: cross

      - name: Build (release)
        run: cross build --release --target ${{ matrix.target }}

      - name: Package tar.gz
        run: |
          set -e
          BIN="bindery"
          TARGET="${{ matrix.target }}"
          OUT_DIR="target/$TARGET/release"

          test -f "$OUT_DIR/$BIN"  # ensure the binary exists

          mkdir -p dist
          cp "$OUT_DIR/$BIN" "./$BIN"
          tar -czf "dist/${BIN}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz" "$BIN"
          rm -f "./$BIN"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}
          path: dist/*.tar.gz
          if-no-files-found: error
          retention-days: 7

  release:
    name: Create GitHub Release
    needs: dist
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.tar.gz
          generate_release_notes: true
